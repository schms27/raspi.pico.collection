name: Package Application with Pyinstaller

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
    - name: Install Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r pico.hid.service/requirements.txt
    - name: Run tests with unittest/coverage
      run: coverage run --source=${{ github.workspace }}\pico.hid.service -m unittest discover -s ${{ github.workspace }}\pico.hid.service
    - name: Generate code-coverage report
      run: coverage html
    - name: Publish code coverage report
      uses: EndBug/add-and-commit@v7
      with:
        add: 'docs/* --force'
        message: 'Add generated code-coverage'
      env:
        GITHUB_TOKEN: $

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Package Application
      uses: JackMcKew/pyinstaller-action-windows@main
      with:
        path: pico.hid.service

    - uses: actions/upload-artifact@v2
      with:
        name: hid.service
        path: pico.hid.service/dist/windows

  sign-executable:
    needs: build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}

    - uses: actions/download-artifact@v2
      with:
        name: hid.service
        path: pico.hid.service/dist/windows

    - name: Create Code Signing Certificate
      run: |
        New-Item -ItemType directory -Path certificate
        Set-Content -Path certificate\certificate.txt -Value '${{ secrets.CERTIFICATE }}'
        certutil -decode certificate\certificate.txt certificate\certificate.pfx

    - name: Code Sign
      run: |
        & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.22000.0/x86/signtool.exe' sign /fd SHA256 /f certificate\certificate.pfx /p '${{ secrets.CERT_PASSWORD }}' pico.hid.service/dist/windows/macropad_launcher.exe
        dir "C:/Program Files (x86)/Windows Kits/10/bin/"

    - uses: actions/upload-artifact@v2
      with:
        name: hid.service
        path: pico.hid.service/dist/windows

  build-installer:
    needs: sign-executable
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    # Download previously built exe
    - uses: actions/download-artifact@v2
      with:
        name: hid.service
        path: pico.hid.service/dist/windows

    - run: cat pico.hid.service/dist/windows/macropad_launcher.exe

    # Install Inno Setup with chocolatey
    - name: Inno setup download
      run: choco install --verbose --yes innosetup

    # Build .iss 
    - name: Build installer using iscc
      run: iscc.exe pico.hid.service/dist/installer.iss

    # upload created installer exe
    - uses: actions/upload-artifact@v2
      with:
        name: hid.service.installer
        path: pico.hid.service/dist/installer
